name: Web Scraper Scheduler

# Controla quando a Action será executada
on:
  # Executa a cada hora
  schedule:
    - cron: '0 18 * * *'  # Minuto 0 de cada hora
  
  # Permite executar manualmente
  workflow_dispatch:

# Variáveis de ambiente para configuração
env:
  # Configurações de email
  SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
  SMTP_PORT: ${{ secrets.SMTP_PORT }}
  SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
  SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
  EMAIL_RECIPIENTS: ${{ secrets.EMAIL_RECIPIENTS }}
  # URL para scraping
  SCRAPE_URL: ${{ secrets.SCRAPE_URL }}

jobs:
  web-scraper:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repositório
      uses: actions/checkout@v3
    
    - name: Configurar Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    
    - name: Instalar Dependências
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Restaurar cache
      id: cache
      uses: actions/cache@v3
      with:
        path: last_site_state.txt
        key: site-state-${{ runner.os }}
    
    - name: Executar Web Scraper
      run: python main.py

    - name: Salvar cache
      if: always()
      uses: actions/cache@v3
      with:
        path: last_site_state.txt
        key: site-state-${{ runner.os }}
        restore-keys: |
          site-state-${{ runner.os }}
      
    - name: Notificar Resultado
      if: failure()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          ❌ Falha na execução do Web Scraper
          Repositório: ${{ github.repository }}
          Evento: ${{ github.event_name }}